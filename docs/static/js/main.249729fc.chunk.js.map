{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACQ,sBACIC,SAZS,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKd,SAGI,uBACIO,KAAK,OACLC,YAAY,aACZC,MAAQV,EACRW,SAxBU,SAACR,GACvBF,EACIE,EAAES,OAAOF,a,8BCRRG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAIEqB,EDnB0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BACQA,GADR,IAEIiB,IAAKjB,EAAIC,eEe1BiB,EA3BM,WAEjB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAgBA,IAEpB,uBAEA,6BAEQ6C,EAAWpB,KAAK,SAACT,EAAU8B,GAAX,OACZ,cAAC,EAAD,CACI9B,SAAUA,GACLA,YCjBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.249729fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(\n            e.target.value\n        );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            //setCategories\n            setCategories(cats => [ inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n            <form \n                onSubmit={ handleSubmit }\n            >\n                <input \n                    type='text' \n                    placeholder='Search Gif'\n                    value={ inputValue }\n                    onChange={ handleInputChange } \n                />\n            </form>   \n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=hrwr6XsuuTqE2QFwsnF36ti8scJarAaU`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={ title }/>\n            <p>{title}</p>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n            { loading && <p>Loading</p> }\n            <div className='card-grid'>\n                    { \n                        images.map( img => (\n                            <GifGridItem \n                                {...img}\n                                key={img.id}\n                            />\n                        ))\n                    }  \n            </div>\n        </>\n    )\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    //useEffect\n    useEffect( () => {\n        \n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [ category ]);\n\n\n\n    return state; // { data:[], loading: true }\n}","import React, {useState} from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\n\n    return ( \n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory  \n                setCategories={ setCategories }\n            />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( (category, index) => (\n                        <GifGrid \n                            category={category}\n                            key={category} \n                        />\n                    ))\n                }\n            </ol>\n            \n        </>\n    );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}